jtype: CompoundIndexer   # this is a CompoundIndexer for image
components:
  - jtype: NumpyIndexer  # this will store the vector embeddings on disk
    with:
      index_filename: vec.gz
      metric: cosine     # this is used to calculate the similarity between vectors
    metas:
      name: vecidx  # a customized name
  - jtype: BinaryPbIndexer # a KV indexer to store the chunks data
    with:
      index_filename: chunk.gz
    metas:
      name: docidx
metas:
  name: '${{ ENV.indexer_name }}'
  workspace: $JINA_WORKSPACE/indexed
requests:
  use_default: true
  on:
    SearchRequest:
      drivers:
        - jtype: VectorSearchDriver   # use VectorSearchDriver for NumpyIndexer
          with:
            executor: vecidx
            traversal_paths: [ 'c' ]  # during search we will get matches of chunks sorted by similarity (scores)
        - jtype: KVSearchDriver       # use KVSearchDriver for BinaryPbIndexer
          with:
            executor: docidx
            traversal_paths: [ 'cm' ] # during search we will add data (parentID) for matches of chunks
        - jtype: ExcludeQL
          with:
            fields:
              - embedding
              - blob
            traversal_paths: [ 'cm', 'c' ]
    [ IndexRequest, UpdateRequest ]:
      with:
        traversal_paths: [ 'c' ]
      drivers:
        - jtype: VectorIndexDriver
          with:
            executor: vecidx
        - jtype: ExcludeQL
          with:
            fields:
              - embedding
              - blob
        - jtype: KVIndexDriver
          with:
            executor: docidx

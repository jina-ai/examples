jtype: CompoundIndexer #this is a indexer for chunks of chunks level, so traversal_path will be one level lower
components:
  - jtype: NumpyIndexer
    with:
      index_filename: vec.gz
      metric: cosine
    metas:
      name: vecidx  # a customized name
  - jtype: BinaryPbIndexer
    with:
      index_filename: chunk.gz
    metas:
      name: docidx
metas:
  name: '${{ ENV.indexer_name }}'
  workspace: $JINA_WORKSPACE/indexed
requests:
  use_default: true
  on:
    SearchRequest:
      drivers:
        - jtype: VectorSearchDriver
          with:
            executor: vecidx
            traversal_paths: ['cc']     # we need to find the similar vector embeddings at chunks of chunks, so we search at 'cc'
        - jtype: KVSearchDriver
          with:
            executor: docidx
            traversal_paths: ['ccm' ]   # we need to append matches for chunks of chunks, so search at 'ccm'
        - jtype: ExcludeQL
          with:
            fields:
              - embedding
              - blob
            traversal_paths: ['cc' ]
    [ IndexRequest, UpdateRequest ]:
      with:
        traversal_paths: ['cc']
      drivers:
        - jtype: VectorIndexDriver
          with:
            executor: vecidx
        - jtype: ExcludeQL        # remove embedding and blob from request messages, since we have already used the raw data, and we can exclude them to reduce size of message
          with:
            fields:
              - embedding
              - blob
        - jtype: KVIndexDriver
          with:
            executor: docidx

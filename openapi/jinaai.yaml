swagger: "2.0"
info:
  description: "This is a sample server for jinaai.  You can find out more about     Jinaai at [https://github.com/jina-ai/](https://github.com/jina-ai/) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Docstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "Docstore.swagger.io"
basePath: "/v2"
tags:
- name: "Doc"
  description: "Everything about your Docs"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /Doc/{DocId}:
    get:
      tags:
      - "Doc"
      summary: "Find Doc by ID"
      description: "Returns a single Doc"
      operationId: "getDocById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "DocId"
        in: "path"
        description: "ID of Doc to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Doc"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Doc not found"
  /Doc/index/:
    post:
      tags:
      - "Doc"
      summary: "index with an flow"
      description: "index with an flow yaml file"
      operationId: "uploadFlowFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "path"
        description: "limit number of indexing"
        required: true
        type: "integer"
        format: "int64"
    
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: false
        type: "file"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /Doc/query/:
    post:
      tags:
      - "Doc"
      summary: "querydoc with an image"
      description: ""
      operationId: "uploadQueryFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "topk"
        in: "path"
        description: "topk numbers  to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "file"
        in: "formData"
        description: " image file to upload"
        required: false
        type: "file"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
            
definitions:
  Doc:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
